Ext.data.JsonP.extendingcontrols({"guide":"<h1 id='extendingcontrols-section-extending-controls'>Extending Controls</h1>\n\n<p>A guide about extending custom controls.</p>\n\n<h2 id='extendingcontrols-section-an-example'>An Example</h2>\n\n<p>As a developer, you have received a request for new functionality, and you have decided to extend the <strong>PageHeader</strong> control in order to complete the request. Specifically there was a request for the <strong>PageHeader</strong> control to have information about the author added before the description, the date added before the subtitle, and version information added before the title.</p>\n\n<p>Here is the implementation of the PageHeader control that will be used for this example.</p>\n\n<p>MEPH.pageheader.PageHeader</p>\n\n<pre><code>        MEPH.define('MEPH.pageheader.PageHeader', {\n            alias: 'pageheader',\n            templates: true,\n            extends: 'MEPH.control.Control',\n            properties : {\n                title: '',\n                subtitle: '',\n                description: ''\n            },\n            intialize: function(){\n                var me = this;\n                me.addAutoBindProperty(['title','subtitle','description']);\n                me.addTransferables(['title', 'subtitle', 'description']);\n                me.callParent.apply(me, arguments);\n            }\n        });\n</code></pre>\n\n<p>MEPH.pageheader.PageHeader template</p>\n\n<pre><code>        &lt;!-- \"name\":\"beforetitle\" --&gt;\n        &lt;h1 data-bind='\"innerHTML\" : \"c$.title\"'&gt;&lt;/h1&gt;\n        &lt;!-- \"name\":\"beforesubtitle\" --&gt;\n        &lt;h2 data-bind='\"innerHTML\" : \"c$.subtitle\"'&gt;&lt;/h2&gt;\n        &lt;!-- \"name\":\"beforedescription\" --&gt;\n        &lt;h3 data-bind='\"innerHTML\" : \"c$.description\"'&gt;&lt;/h3&gt;\n        &lt;!-- \"name\":\"afterdescription\" --&gt;\n</code></pre>\n\n<p>This is how we would extend the PageHeader class to include this new functionality.</p>\n\n<p>MEPH.pageheader.PageHeaderExtended</p>\n\n<pre><code>        MEPH.define('MEPH.pageheader.PageHeaderExtended', {\n            alias:'pageheader_extended',\n            templates: true,\n            extends : 'MEPH.pageheader.PageHeader',\n            properties : {\n                author: null,\n                date: null,\n                version: null\n            },\n            initialize: function() {\n                var me = this;\n                me.addAutoBindProperty(['author','date','version']);\n                me.addTransferables(['author','date','version']);\n                me.callParent.apply(me, arguments);\n            }\n        });\n</code></pre>\n\n<p>MEPH.pageheader.PageHeaderExtended template</p>\n\n<pre><code>        &lt;!-- \"instruction\": true, \"name\" : \"author\", \"operation\" : \"inject\" , \"position\" : \"beforedescription\", \"before\" : false --&gt;\n        &lt;h2 data-bind='\"innerHTML\" : \"c$.author\"'&gt;&lt;/h2&gt;\n        &lt;!-- \"instruction\": true, \"name\" : \"author\", \"close\": true --&gt;\n\n        &lt;!-- \"instruction\": true, \"name\" : \"date\", \"operation\" : \"inject\" , \"position\" : \"beforesubtitle\", \"before\" : false --&gt;\n        &lt;h2 data-bind='\"innerHTML\" : \"c$.date\"'&gt;&lt;/h2&gt;\n        &lt;!-- \"instruction\": true, \"name\" : \"date\", \"close\": true --&gt;\n\n        &lt;!-- \"instruction\": true, \"name\" : \"version\", \"operation\" : \"inject\" , \"position\" : \"beforetitle\", \"before\" : false --&gt;\n        &lt;h2 data-bind='\"innerHTML\" : \"c$.version\"'&gt;&lt;/h2&gt;\n        &lt;!-- \"instruction\": true, \"name\" : \"version\", \"close\": true --&gt;\n</code></pre>\n\n<p>You may be thinking that that's, a lot of code. Don't worry will be break down the new bits into something easy to understand and replicate.</p>\n\n<p>In the PageHeader template there are four html comments, these are apart of the template declaration and are used in the rendering of the extending control.</p>\n\n<pre><code>        &lt;!-- \"name\":\"beforetitle\" --&gt;\n        &lt;h1 data-bind='\"innerHTML\" : \"c$.title\"'&gt;&lt;/h1&gt;\n        &lt;!-- \"name\":\"beforesubtitle\" --&gt;\n        &lt;h2 data-bind='\"innerHTML\" : \"c$.subtitle\"'&gt;&lt;/h2&gt;\n        &lt;!-- \"name\":\"beforedescription\" --&gt;\n        &lt;h3 data-bind='\"innerHTML\" : \"c$.description\"'&gt;&lt;/h3&gt;\n        &lt;!-- \"name\":\"afterdescription\" --&gt;\n</code></pre>\n\n<p><strong>A close look</strong></p>\n\n<p>If you look carefully you will see that the comments specify some information which is useful to MEPH.</p>\n\n<pre><code>        &lt;!-- \"name\":\"beforetitle\" --&gt;\n</code></pre>\n\n<p>The previous comment specifies a location, which can be used by extending controls to place more html nodes. Like in the PageHeaderExtended template an instruction is defined which will place a new html <strong>h2</strong> right after the beforetitle comment of the PageHeader.</p>\n\n<pre><code>        &lt;!-- \"instruction\": true, \"name\" : \"version\", \"operation\" : \"inject\" , \"position\" : \"beforetitle\", \"before\" : false --&gt;\n        &lt;h2 data-bind='\"innerHTML\" : \"c$.version\"'&gt;&lt;/h2&gt;\n        &lt;!-- \"instruction\": true, \"name\" : \"version\", \"close\": true --&gt;\n</code></pre>\n\n<p>It specifies that</p>\n\n<ul>\n<li><strong>\"instruction\": true</strong>, it is an instruction to be used in the rendering of the template.</li>\n<li><strong>\"name\" : \"version\"</strong>, the instruction within the context is called \"version\".</li>\n<li><strong>\"operation\" : \"inject\"</strong> , it will perform an inject operation. This means, it will take whatever is between its closing instruction and itself, and place it at the specified location.</li>\n<li><strong>\"position\" : \"beforetitle\"</strong>,  Specifies the location where the instruction will be executed.</li>\n<li><strong>\"before\" : false</strong>, Specifies if the operation will place it before the position or after.</li>\n</ul>\n\n\n<p>All the other comments in this example follow the same pattern. So you see its not complicated at all.</p>\n\n<p>If the PageHeader renders</p>\n\n<pre><code>        &lt;h1 data-bind='\"innerHTML\" : \"c$.title\"'&gt;&lt;/h1&gt;\n        &lt;h2 data-bind='\"innerHTML\" : \"c$.subtitle\"'&gt;&lt;/h2&gt;\n        &lt;h3 data-bind='\"innerHTML\" : \"c$.description\"'&gt;&lt;/h3&gt;\n</code></pre>\n\n<p>Then PageHeaderExtended renders</p>\n\n<pre><code>        &lt;h2 data-bind='\"innerHTML\" : \"c$.version\"'&gt;&lt;/h2&gt;\n        &lt;h1 data-bind='\"innerHTML\" : \"c$.title\"'&gt;&lt;/h1&gt;\n        &lt;h2 data-bind='\"innerHTML\" : \"c$.date\"'&gt;&lt;/h2&gt;\n        &lt;h2 data-bind='\"innerHTML\" : \"c$.subtitle\"'&gt;&lt;/h2&gt;\n        &lt;h2 data-bind='\"innerHTML\" : \"c$.author\"'&gt;&lt;/h2&gt;\n        &lt;h3 data-bind='\"innerHTML\" : \"c$.description\"'&gt;&lt;/h3&gt;\n</code></pre>\n\n<p>In the real world, this probabaly doesn't make a lot of sense in respect to why a version would use a <strong>h2</strong> tag.  As an example of how to extend controls effectively, this is fine.</p>\n","title":"Custom Controls 201"});