Ext.data.JsonP.MEPH_math_J3DIVector3({"tagname":"class","name":"MEPH.math.J3DIVector3","autodetected":{},"files":[{"filename":"J3DIVector3.js","href":"J3DIVector3.html#MEPH-math-J3DIVector3"}],"members":[],"alternateClassNames":[],"aliases":{},"id":"class-MEPH.math.J3DIVector3","short_doc":"[\n       Constructor(in J3DVector3 vector),                  // copy passed vector into new J3DVector3\n       Constru...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/J3DIVector3.html#MEPH-math-J3DIVector3' target='_blank'>J3DIVector3.js</a></div></pre><div class='doc-contents'><p>[\n       Constructor(in J3DVector3 vector),                  // copy passed vector into new J3DVector3\n       Constructor(in sequence[float] array)               // create new J3DVector3 with 3 floats from array\n       Constructor(in float x, in float y, in float z)     // create new J3DVector3 with 3 floats\n       Constructor()                                       // create new J3DVector3 with (0,0,0)\n   ]\n   interface J3DVector3 {\n       void load(in J3DVector3 vector);                    // copy the values from the passed vector\n       void load(in sequence[float] array);                // copy 3 floats into the vector from array\n       void load(in float x, in float y, in float z);      // copy 3 floats into the vector\n       sequence[float] getAsArray();                       // return the vector as an array of 3 floats\n       Float32Array getAsFloat32Array();             // return the matrix as a Float32Array with 16 values\n       void multMatrix(in J3DIMatrix4 matrix);             // multiply the vector by the passed matrix (on the right)\n       float vectorLength();                               // return the length of the vector\n       float dot();                                        // return the dot product of the vector\n       void cross(in J3DVector3 v);                        // replace the vector with vector x v\n       void divide(in float divisor);                      // divide the vector by the passed divisor\n   }</p>\n</div><div class='members'></div></div>","meta":{}});