MEPH.define("MEPH.tween.TweenEditor",{alias:"tweeneditor",templates:true,requires:["MEPH.util.Observable","MEPH.button.Button","MEPH.util.Style","MEPH.util.SVG","MEPH.util.Dom"],extend:"MEPH.control.Control",statics:{states:{controldragging:"controldragging",dragging:"dragging"},tweenTypes:{bezier:"bezier"},StartControlPoint:"StartControlPoint",EndControlPoint:"EndControlPoint"},properties:{source:null,mark:null,target:null,controlpointoffset:0.1,controlpointstrokewidth:3,paths:null,state:null,controlpoints:null,pointradius:8,tweenoverradius:10,linestroke:"#000000",linestrokeselected:"#f2f51a",controlpointfill:"transparent",controlpointstroke:"#ff0021",linestrokewidth:"4px",linestrokeoverwidth:"7px",$selectedLine:null,tweenrad:8,$tweenpoints:null,margin:2,$structureElements:null,animate:false},initialize:function(){var a=this;a.callParent.apply(a,arguments);a.source=MEPH.util.Observable.observable([]);a.paths=MEPH.util.Observable.observable([]);a.controlpoints=MEPH.util.Observable.observable([]);a.source.on("changed",a.update.bind(a));a.controlpoints.on("changed",a.update.bind(a))},onLoaded:function(){var a=this;a.great();a.renderer=new MEPH.util.SVG();a.renderer.setCanvas(a.svg);a.appendEvents();a.render()},appendEvents:function(){var a=this;a.don("tweendown",a.svg,a.onTweenDown.bind(a));a.don("resize",window,a.update.bind(a));a.don("mousemove",a.svg,a.onMouseMove.bind(a));a.don("mouseup",a.svg,a.onMouseUp.bind(a));a.don("tweenup",a.svg,a.onTweenUp.bind(a));a.don("tweenmove",a.svg,a.onTweenMove.bind(a));a.don("controldown",a.svg,a.onControlDown.bind(a));a.don("controlup",a.svg,a.onControlUp.bind(a));a.don("controlmove",a.svg,a.onControlMove.bind(a))},onControlMove:function(a){var b=this;if(b.state===MEPH.tween.TweenEditor.states.controldragging){var c=b.convertToTweenSpace(a.position);b.setControlPointPosition(b.target,c);b.update()}},onControlUp:function(a){var b=this;if(b.state===MEPH.tween.TweenEditor.states.controldragging){b.state=null;b.target=null}},onControlDown:function(a){var b=this;if(b.state===null){b.state=MEPH.tween.TweenEditor.states.controldragging;b.target=a.controlpoint;b.startPosition=b.getControlPointPosition(a.controlpoint)}},onMouseUp:function(a){var b=this;if(b.state===MEPH.tween.TweenEditor.states.dragging){var c=MEPH.util.Dom.getEventPositions(a,b.svg);b.svg.dispatchEvent(MEPH.createEvent("tweenup",{tweentarget:b.target,position:c}))}else{if(b.state===MEPH.tween.TweenEditor.states.controldragging){b.svg.dispatchEvent(MEPH.createEvent("controlup",{}))}}},onMouseMove:function(a){var b=this;if(b.state===MEPH.tween.TweenEditor.states.dragging){var c=MEPH.util.Dom.getEventPositions(a,b.svg);b.svg.dispatchEvent(MEPH.createEvent("tweenmove",{tweentarget:b.target,position:c}))}else{if(b.state===MEPH.tween.TweenEditor.states.controldragging){var c=MEPH.util.Dom.getEventPositions(a,b.svg);b.svg.dispatchEvent(MEPH.createEvent("controlmove",{target:b.target,position:c.first()}))}}},onTweenUp:function(){var a=this;if(a.state===MEPH.tween.TweenEditor.states.dragging){a.state=null;a.target=null}},onTweenMove:function(b){var c=this,a,d;if(c.state===MEPH.tween.TweenEditor.states.dragging){d=c.convertToTweenSpace(b.position.first());a=c.getPoint(b.tweentarget);a.x=d.x;a.y=d.y;c.source.fire("changed",{removed:[],added:[]})}},getPosition:function(a){var b=this;return{x:b.getX(a.x),y:b.getY(a.y)}},getX:function(b){var c=this,a=Style.size(c.svg);return(b*(a.width-c.margin))+c.margin},getY:function(b){var c=this,a=Style.size(c.svg),d=a.height-c.margin;return(b*(d/2))+(d/2)+c.margin},convertToTweenSpace:function(e){var d=this,b=Style.size(d.svg),c=b.width-d.margin,a=b.height-d.margin;return{x:(e.x/c),y:((e.y/a)*2)-1}},getPathPoints:function(b){var a=this;return a.source.where(function(c){return c.mark===b})},getPoint:function(b){var c=this,a=c.source.first(function(d){return d.guid===b});return a},onTweenDown:function(b){var c=this;if(!c.state&&b.tweenpoint){var a=c.getPoint(b.tweenpoint.options.guid);if(!a||a.anchor){return}c.target=b.tweenpoint.options.guid;c.state=MEPH.tween.TweenEditor.states.dragging;c.startposition=c.getPoint(c.target)}},update:function(){var a=this;if(a.animate){if(a.animateRequest){cancelAnimationFrame(a.animateRequest)}a.animateRequest=requestAnimationFrame(function(){a.render();a.animateRequest=null})}else{a.render()}},updateData:function(){var a=this;var b=a.paths.select(function(g){var f=a.getOrderedPathPoints(g);var d=f.select(function(h,i){return h.x});var e=f.select(function(h,i){return h.y});var c=f.select(function(k,h){var l=a.getControlPoints(g,h);if(l){var j=a.getControlPointPosition(l.point.start);var i=a.getControlPointPosition(l.point.end);return{segment:h,startpos:MEPH.clone(j),endpos:MEPH.clone(i)}}}).where();return{path:g,x:d,y:e,segments:c}});a.tween=b;if(a.svg){a.svg.dispatchEvent(MEPH.createEvent("dataupdated",{data:b}))}},render:function(){var a=this;a.renderPaths();a.renderControlPoints();a.renderTweenPoints();a.renderStructureElements()},selectPoint:function(a,b){return b.point.path===a.path&&b.point.segment===a.segment&&b.point.type===a.type},renderControlPoints:function(){var c=this,a,b;if(!c.renderedControlPoints){c.renderedControlPoints=[]}b=c.controlpoints.where(function(d){return !c.renderedControlPoints.some(c.selectPoint.bind(c,d))});renderedPoints=c.controlpoints.where(function(d){return c.renderedControlPoints.some(c.selectPoint.bind(c,d))});renderedPoints.foreach(function(d){var e=c.convertToControlPoint(false,d);d.parts.foreach(function(g){var f=e.parts.first(function(h){return h.name===g.options.name});g.options=f}).foreach(function(f){if(f.options.shape===MEPH.util.SVG.shapes.line){c.renderer.drawLine(f.options,f)}else{if(f.options.shape===MEPH.util.SVG.shapes.circle){c.renderer.drawCircle(f.options,f)}}})});newpoints=b.select();newpoints.select(c.convertToControlPoint.bind(c,true)).foreach(function(e){var d=c.renderer.draw(e.parts);e.point.parts=d;return e.point}).foreach(function(d){c.addControlPointEvents(d);c.renderedControlPoints.push(d)});c.renderedControlPoints.removeWhere(function(d){return !c.controlpoints.some(function(e){return c.selectPoint(e,d)})}).foreach(function(d){d.parts.foreach(function(e){c.renderer.remove(e.shape)});c.dun(d)})},convertToControlPoint:function(b,d){var c=this,e,a;points=c.getLineSegment(d.path,d.segment);a=MEPH.tween.TweenEditor.EndControlPoint===d.type?points.second():points.first();if(b){e=c.getInitialControlPointPosition(a);d.position=e}else{e=d.position}return{parts:c.createControlPointInstructions(a,e),point:d}},getControlPointPosition:function(b){var a=this;if(b.point){return b.point.position}return b.position},setControlPointPosition:function(b,a){b.point.position=a},addControlPointEvents:function(c){var a=this;var b=c.point.parts.first(function(d){return d.options.shape==="circle"});a.don("mousedown",b.shape,function(e,f,d){a.handleControlPointEvents(e,f,"mousedown")}.bind(a,c,b.shape),c)},handleControlPointEvents:function(d,b,a){var c=this;switch(a){case"mousedown":b.dispatchEvent(MEPH.createEvent("controldown",{controlpoint:d,shape:b}));break}},createControlPointInstructions:function(a,e){var c=this;var d={name:"circle",shape:MEPH.util.SVG.shapes.circle,x:c.getX(e.x),y:c.getY(e.y),stroke:c.controlpointstroke,fill:c.controlpointfill,radius:c.pointradius};var b={name:"line",shape:MEPH.util.SVG.shapes.line,end:c.getPosition(a),start:c.getPosition(e),stroke:c.controlpointstroke,fill:c.controlpointfill,strokeWidth:c.controlpointstrokewidth,"stroke-dasharray":"5,5"};return[d,b]},getInitialControlPointPosition:function(a){var b=this;return{x:a.x,y:a.y+b.controlpointoffset>1?Math.max(0,a.y-b.controlpointoffset):a.y+b.controlpointoffset}},renderPaths:function(){var e=this,c,d,b,a,h,g,f;if(!e.renderedPaths){e.renderedPaths={}}d=e.paths.where(function(i){return !e.renderedPaths[i]});b=e.paths.where(function(i){return e.renderedPaths[i]});d.foreach(function(i){a=e.getLineInstructions(i);e.renderedPaths[i]={lines:e.renderer.draw(a),linetypes:[]};e.renderedPaths[i].lines.foreach(function(k,j){e.addEventsToLine(k,j);k.path=i})});b.foreach(function(i){a=e.getLineInstructions(i);h=e.renderedPaths[i].lines;if(h.length>a.length){var j=h.length-a.length;h.subset(0,j).where(function(m){e.renderer.remove(m)});h.removeWhere(function(m,n){return n<j});h.foreach(function(n,m){e.renderer.drawLine(a[m],h[m]);h[m].path=i;e.addEventsToLine(h[m],m)})}else{if(h.length<a.length){var l=a.length-h.length;var k=e.renderer.draw(a.subset(0,l));k.foreach(function(n,m){e.addEventsToLine(n,m+h.length);n.path=i});h.push.apply(h,k);a.subset(l).foreach(function(m,n){e.renderer.drawLine(m,h[n]);e.addEventsToLine(h[n],n)})}else{h.foreach(function(m,n){e.renderer.drawLine(a[n],h[n]);e.addEventsToLine(h[n],n)})}}})},setSelectedLineToBezier:function(){var b=this;if(b.$selectedLine){var c=b.getPath(b.$selectedLine.path);var a=c.linetypes.first(function(d){return d.lineIndex===b.$selectedLine.lineIndex});if(a){a.type=MEPH.tween.TweenEditor.tweenTypes.bezier}else{c.linetypes.push({type:MEPH.tween.TweenEditor.tweenTypes.bezier,lineIndex:b.$selectedLine.lineIndex})}}},getPathLines:function(a){var b=this,c=b.getPath(a);if(c){return c.lines||[]}return[]},getPath:function(a){var b=this;if(b.renderedPaths&&b.renderedPaths[a]){return b.renderedPaths[a]}return null},addEventsToLine:function(a,b){var c=this;c.dun(a);a.lineIndex=b;c.don("mouseout",a.shape,function(e,d){c.handleLineState(e,"mouseout")}.bind(c,a),a);c.don("mouseover",a.shape,function(e,d){c.handleLineState(e,"mouseover")}.bind(c,a),a);c.don("click",a.shape,function(e,d){c.handleLineState(e,"click")}.bind(c,a),a);c.handleLineState(a)},handleLineState:function(b,a){var c=this;switch(a){case"click":if(c.$selectedLine){c.$selectedLine.shape.style.stroke=c.linestroke}b.shape.style.stroke=c.linestrokeselected;c.$selectedLine=b;break;case"mouseover":b.shape.style.strokeWidth=c.linestrokeoverwidth;break;case"mouseout":b.shape.style.strokeWidth=c.linestrokewidth;break;default:if(b&&b.shape){b.shape.style.stroke=c.linestroke;b.shape.style.strokeWidth=c.linestrokewidth}c.$selectedLine=null;break}},getLineInstructions:function(a){var e=this,d,g,b,c,f;d=e.getOrderedPathPoints(a);b=d.select(function(j,i){if(i){c=e.getControlPoints(a,i-1);f=e.getPosition(d[i]);g=e.getPosition(d[i-1]);if(!c||!c.point||!c.point.start||!c.point.end){var h={shape:MEPH.util.SVG.shapes.line,start:g,strokeWidth:e.linestrokewidth,end:f};return h}else{var k={shape:MEPH.util.SVG.shapes.bezier,start:g,fill:"transparent",bezier1:e.getPosition(e.getControlPointPosition(c.point.start)),bezier2:e.getPosition(e.getControlPointPosition(c.point.end)),strokeWidth:e.linestrokewidth,end:f};return k}}}).where(function(h){return h});return b},getOrderedPathPoints:function(a){var b=this;return b.getPathPoints(a).orderBy(function(d,c){return d.x-c.x})},renderTweenPoints:function(){var e=this,b=function(g){return{shape:MEPH.util.SVG.shapes.circle,x:e.getX(g.x),guid:g.guid,y:e.getY(g.y),radius:e.pointradius}};if(e.$tweenpoints===null){var a=e.source.select(b);e.$tweenpoints=e.renderer.draw(a)}else{var d=e.source.select(b).where(function(g,h){var j=e.$tweenpoints[h];if(j){var i=e.renderer.drawCircle(g,j);e.dun(j);j.options.guid=i.options.guid;e.addEventsToTweenPoints([j]);return false}else{return true}});if(d.length){var f=e.renderer.draw(d);e.$tweenpoints.push.apply(e.$tweenpoints,f);e.addEventsToTweenPoints(f)}else{if(e.source.length<e.$tweenpoints){var c=e.$tweenpoints.subset(e.source.length).select(function(g){e.renderer.remove(g);return g});e.$tweenpoints.removeWhere(function(g){return c.some(function(h){return h===g})}).foreach(function(g){e.dun(g)})}}}},addEventsToTweenPoints:function(b){var a=this;b.foreach(function(c){a.don("mousedown",c.shape,function(e,d){var f=MEPH.util.Dom.getEventPositions(d,a.svg);a.svg.dispatchEvent(MEPH.createEvent("tweendown",{tweenpoint:e,position:f}))}.bind(a,c),c);a.don("mouseout",c.shape,function(d){d.shape.setAttribute("r",a.tweenrad)}.bind(a,c),c);a.don("mouseover",c.shape,function(e,d){var f=MEPH.util.Dom.getEventPositions(d,a.svg);if(!a.state){a.target=e.options.guid}e.shape.setAttribute("r",a.tweenoverradius);a.svg.dispatchEvent(MEPH.createEvent("tweenover",{tweenpoint:e,position:f}))}.bind(a,c),c)})},renderStructureElements:function(){var c=this,b=Style.size(c.svg);var a=[{name:"left",shape:MEPH.util.SVG.shapes.line,start:{x:0+c.margin,y:0+c.margin},end:{x:c.margin,y:b.height-c.margin}},{name:"right",shape:MEPH.util.SVG.shapes.line,start:{x:b.width-c.margin,y:c.margin},end:{x:b.width-c.margin,y:b.height-c.margin}},{name:"top",shape:MEPH.util.SVG.shapes.line,start:{x:c.margin,y:c.margin},end:{x:b.width-c.margin,y:c.margin}},{name:"bottom",shape:MEPH.util.SVG.shapes.line,start:{x:c.margin,y:b.height-c.margin},end:{x:b.width-c.margin,y:b.height-c.margin}}];if(c.$structureElements===null){c.$structureElements=c.renderer.draw(a)}else{c.$structureElements.foreach(function(e){var d=a.first(function(f){return f.name===e.options.name});c.renderer.drawLine(d,e)})}},onAddPointAndPath:function(){var a=this;a.onAddPath();a.onAddPoint()},onAddPoint:function(){var a=this;a.addPoint({x:0.5,y:0})},addPoint:function(a){var b=this;a.x=Math.max(0,Math.min(a.x,1));a.guid=MEPH.GUID();a.y=Math.max(-1,Math.min(a.y,1));a.mark=b.mark;b.source.push(a)},onAddPath:function(){var a=this;a.addPath({x:0,y:0},{x:1,y:0})},addPath:function(d,c){var b=this,a=MEPH.GUID();b.paths.push(a);b.mark=a;d.anchor=true;c.anchor=true;b.addPoint(d);b.addPoint(c)},addControlPoint:function(d,c,a){var b=this;if(!b.controlpoints.some(function(e){return e.path===d&&e.segment===c&&e.type===a})){b.controlpoints.push({path:d,segment:c,type:a})}},removeControlPoint:function(a){var b=this;return b.controlpoints.removeWhere(function(c){return c===a}).first()},getControlPoints:function(d,c){var b=this,e,a;e=b.controlpoints.first(function(f){return f.path===d&&f.segment===c&&f.type===MEPH.tween.TweenEditor.StartControlPoint});a=b.controlpoints.first(function(f){return f.path===d&&f.segment===c&&f.type===MEPH.tween.TweenEditor.EndControlPoint});if(e&&e.position&&a&&a.position){return{point:{start:e,end:a}}}return null},getLineSegment:function(d,c){var b=this,a=b.getOrderedPathPoints(d);return a=a.subset(c,c+2)},addControlsToSelectedLine:function(){var c=this,b=c.$selectedLine,a;if(b){c.addControlPoint(b.path,b.lineIndex,MEPH.tween.TweenEditor.StartControlPoint);c.addControlPoint(b.path,b.lineIndex,MEPH.tween.TweenEditor.EndControlPoint)}}});