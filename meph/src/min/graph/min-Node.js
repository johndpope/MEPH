MEPH.define("MEPH.graph.Node",{requires:["MEPH.math.J3DIVector3"],properties:{},isHidden:function(){var a=this;return a.$hidden},appendData:function(c){var b=this;b.$data=c;for(var a in c){if(b["get"+a.capitaliseFirstLetter()]===undefined){b["get"+a.capitaliseFirstLetter()]=function(d){return b.$data[d]}.bind(b,a)}if(b["set"+a.capitaliseFirstLetter()]===undefined){b["set"+a.capitaliseFirstLetter()]=function(d,e){b.$data[d]=e;b.fire("move",{})}.bind(b,a)}}},initialize:function(a){var b=this;MEPH.Events(b);b.$hidden=false;b.maxDistanceToTarget=1;b.$position=new MEPH.math.J3DIVector3(0,0,0);b.$speed=0.5;b.$activezones=MEPH.util.Observable.observable([]);b.on("removed",b.clearConnections.bind(b));b.$connections=MEPH.util.Observable.observable([]).on("afterpush",b.handleNewConnection.bind(b)).on("beforepush",b.fire.bind(b,"beforeconnectionadded")).on("afterpush",b.fire.bind(b,"afterconnectionadded")).on("afterpush",b.fire.bind(b,"connectionadded")).on("afterpush",b.onConnectionAdded.bind(b)).on("onpush",b.fire.bind(b,"changed")).on("beforesplice",b.fire.bind(b,"beforeconnectionremoved")).on("aftersplice",b.fire.bind(b,"afterconnectionremoved")).on("aftersplice",b.handleConnectionRemoved.bind(b)).on("onremove",b.fire.bind(b,"connectionremoved")).on("onremove",b.fire.bind(b,"changed"))},speed:function(a){var b=this;if(a!==undefined){b.$speed=a}return b.$speed},copyoptions:function(c){var b={};for(var a in c){b[a]=c[a]}return b},handleConnectionRemoved:function(e,c){var f=this;var b=c.removed.concatFluentReverse(function(i){return i.getZones()}).where(function(i){return i.getNode()===f});var a=b.first();if(a){if(a.isEnumerable()){var d=a.getOptions().option;var h=f.copyoptions(a.getOptions().option);h.id=GUID();if(f.isOutput(d)){f.getNodeOutputs().removeWhere(function(i){return i===d});if(!f.getNodeOutputs().contains(function(i){return i.title===h.title})){f.getNodeOutputs().push(h)}}else{f.getNodeInputs().removeWhere(function(i){return i===d});if(!f.getNodeInputs().contains(function(i){return i.title===h.title})){f.getNodeInputs().push(h)}if(a.isMatching()){var g=f.getNodeOutputs().removeWhere(function(i){return i.match===d.id});g.foreach(function(i){f.getZones().removeWhere(function(j){return j.getOptions().option===j}).foreach(function(j){j.destroy()})})}}a.destroy()}}},onConnectionAdded:function(g,d){var f=this;var b=d.added.concatFluentReverse(function(j){return j.getZones()}).where(function(j){return j.getNode()===f});var e=b.first();if(e){if(e.isEnumerable()){var a=f.copyoptions(e.getOptions().option);a.id=GUID();var i=false;if(f.isOutput(e.getOptions().option)){if(f.getFreeZones().where(function(j){return f.isOutput(j)}).length<=1){f.getNodeOutputs().push(a);i=true}}else{if(f.getFreeZones().where(function(j){return !f.isOutput(j)}).length<=1){f.getNodeInputs().push(a);i=true}}if(e.isMatching()&&i){var h=a.id;var c=e.getOptions().option;var a=f.copyoptions(e.getOptions().option);a.id=GUID();a.match=h;a.matchingoutput=false;a.enumerable=false;a.languageType=c.matchingoutputtype||c.languageType;if(f.isOutput(e.getOptions().option)){f.getNodeInputs().push(a)}else{f.getNodeOutputs().push(a)}}}}},getFreeZones:function(){var a=this;return a.getZones().where(function(b){return !a.getConnections().contains(function(c){return !c.getZones().contains(b)})})},save:function(){var c=this,a={};a.id=c.getId();var e=c.getPosition();a.position=e;var d={};for(var b in c.$data){if(b!=="nodeInputs"&&b!=="nodeOutputs"){d[b]=c.$data[b]}}d.nodeInputs=c.$data.nodeInputs.select(function(h){var f={};for(var g in h){if(g!=="node"&&typeof h[g]!=="function"){f[g]=h[g]}}return f});d.nodeOutputs=c.$data.nodeOutputs.select(function(h){var f={};for(var g in h){if(g!=="node"&&typeof h[g]!=="function"){f[g]=h[g]}}return f});a.data=d;return a},isOutput:function(a){var b=this;return b.getNodeOutputs().contains(function(c){return c===a})},isOutputZone:function(a){var b=this;return b.isOutput(a.getOptions().option)},addZone:function(a){var b=this;if(!b.$activezones.contains(a)){b.$activezones.push(a);a.on("click",b.onNodeClicked.bind(b,a,b))}if(b.$ignoreMouse){a.ignoreMouse(b.$ignoreMouse)}},ignoreMouse:function(b){var a=this;a.$ignoreMouse=true;a.getZones().foreach(function(c){return c.ignoreMouse(b)})},onNodeClicked:function(c,b){var a=this;a.fire("click",{zone:c,node:b})},hasZone:function(a){var b=this;return b.getZones().contains(function(c){return c===a})},getZones:function(){var a=this;return a.$activezones},clearZones:function(){var a=this;a.$activezones.removeWhere(function(b){b.destroy()})},getConectionPosition:function(b){var c=this;var a=b.getZones();if(a){return a.foreach(function(d){return d.getPosition()})}return[c.getPosition()]},setPosition:function(a,d,c){var b=this;if(b.isMoving(a,d,c)){b.$position=new J3DIVector3(a,d,c);b.fire("move",{node:b})}},getTargetPosition:function(){var a=this;return a.$targetPosition},setTargetPosition:function(a,f,d,e){var b=this;b.$targetPosition=pgx.Vector.Create({x:a,y:f,z:d});if(b.movingToTarget){return}b.movingToTarget=true;if(b.requestedAnimationFrame!==undefined){cancelAnimationFrame(b.requestedAnimationFrame)}var c=function(){var h=pgx.Vector.Create(b.$position);var g=b.$targetPosition.subtract(h).unit().multiply(b.$speed).add(h);b.setPosition(g.x,g.y,g.z);if(g.distance(b.$targetPosition)<b.maxDistanceToTarget){b.movingToTarget=false;if(e){e()}b.requestedAnimationFrame=undefined}else{b.requestedAnimationFrame=requestAnimationFrame(c)}};b.requestedAnimationFrame=requestAnimationFrame(c)},isMoving:function(b,e,d){var c=this,a=c.getPosition();if(a){return !(a.x==b&&a.y==e&&a.z==d)}return true},getPosition:function(){var a=this;if(a.$position){return{x:a.$position[0],y:a.$position[1],z:a.$position[2]}}return null},handleNewConnection:function(c,e){var d=this,b=[];for(var a=0;a<e.added.length;a++){b.push(e.added[a])}if(b){b.foreach(function(f){if(!f.getNode(d)){f.addNode(d)}f.on("removed",d.onConnectionRemoved.bind(d,f))})}},onConnectionRemoved:function(a){var b=this;b.removeConnection(a)},clearConnections:function(){var a=this;a.getConnections().removeWhere(function(b){return true})},getZoneConnectors:function(){var a=this;return a.getZones().where(function(b){if(b.getOptions&&typeof(b.getOptions)==="function"){return b.getOptions().type==="connector"}return false})},getConnection:function(a){var b=this;return b.$connections.first(function(c){return c===a})},getConnections:function(){var a=this;return a.$connections},removeConnection:function(a){var b=this;b.$connections.removeWhere(function(c){return c===a})},addConnection:function(a){var b=this;if(!b.getConnection(a)){b.$connections.push(a)}},removed:function(){var a=this;a.clearZones();a.fire("removed",{})},setId:function(b){var a=this;a.$id=b},getId:function(){var a=this;return a.$id}});