MEPH.define("MEPH.graph.Graph",{requires:["MEPH.util.Observable","MEPH.graph.Node"],properties:{id:null},on:function(a,c){var b=this;b.addListener(a,c)},addNodes:function(a){var b=this;return a.select(function(c){return b.addNode(c)})},addConnection:function(a){var b=this;b.connections.push(a)},getConnections:function(){var a=this;return a.connections},getViewport:function(){var a=this;return a.$viewport},removeConnections:function(a){var b=this;a.foreach(function(c){b.removeConnection(c)})},save:function(){var b=this;var a={nodes:b.nodes.select(function(c){return c.save()}),connections:b.connections.select(function(c){return c.save()})};return a},saveGraph:function(){var b=this;var a={id:b.id||MEPH.GUID(),connections:b.connections.select(),nodes:b.nodes.select(function(c){var d={id:c.id||c.$id,position:c.position||c.$position,data:{id:c.data.id,type:c.data.____type,nodeInputs:c.data.nodeInputs.select(),nodeOutputs:c.data.nodeOutputs.select()}};if(c.data.subGraph){d.data.subGraph=JSON.parse(JSON.stringify(c.data.subGraph))}return d})};return a},load:function(a){var d=this;a=JSON.parse(JSON.stringify(a));if(a.id){d.id=a.id}var b=a.nodes.select(function(f){var e=new MEPH.graph.Node();e.setId(f.id);e.setPosition(f.position.x,f.position.y,f.position.z);e.appendData(f.data);d.addNode(e);return e});d.$loadedGraph=a;if(!d.addVewportListener&&d.$viewport){d.$viewport.on("newactivezone",function(f){var g=f.id,e=f.zone;d.getConnections().where(function(h){return d.$loadedGraph.connections.contains(function(i){return i.id===h.getId()})}).foreach(function(j){var h=d.$loadedGraph.connections.first(function(k){return k.id===j.getId()});var i=h.zones.first(function(k){return k===g});if(i){j.addZone(e)}})});d.addedViewportListener=true}var c=a.connections.select(function(e){var f=new MEPH.graph.Connection();f.setId(e.id);b.where(function(g){return e.nodes.contains(function(h){return h==g.getId()})}).foreach(function(g){f.addNodes(g)});f.getNodes().foreach(function(g){g.getZones().where(function(h){return e.contains(h.getId())}).foreach(function(h){f.addZone(h)})});d.addConnection(f)})},clearConnections:function(){var b=this,a=b.getConnections().select(function(c){return c});b.removeConnections(a)},removeConnection:function(b){var c=this;var a=c.connections.removeWhere(function(d){return d===b});a.foreach(function(d){if(d.removed){d.removed()}});return a},removeSelectedConnections:function(){var b=this;var a=b.$viewport.removeSelectedConnections();a.foreach(function(c){b.removeConnection(c)})},addNode:function(b){var a=this;b.on("click",a.onNodeClicked.bind(a,b));b.on("move",a.onNodeMove.bind(a,b));a.nodes.push(b);return b},onNodeClicked:function(b){var a=this;if(a.selectedNode!==b){a.selectedNode=b;a.fire("nodeselected",b)}},onNodeMove:function(b){var a=this;a.fire("change",{})},clear:function(){var a=this;a.removeConnections(a.getConnections().select(function(b){return b}));a.removeNodes(a.getNodes().select(function(b){return b}));a.$viewport.clear()},removeNodes:function(a){var b=this;a.foreach(function(c){b.removeNode(c)})},removeNode:function(c){var b=this;var a=b.nodes.removeWhere(function(d){return d===c});a.foreach(function(d){if(d.removed){d.removed()}});return a},getNodes:function(){var a=this;return a.nodes},getNode:function(b){var a=this;return a.nodes.first(function(c){return c.getId()==b})},initialize:function(a){var b=this;MEPH.Events(b);b.nodes=MEPH.util.Observable.observable([]).on("beforepush",b.fire.bind(b,"beforenodeadded")).on("afterpush",b.fire.bind(b,"afternodeadded")).on("onpush",b.fire.bind(b,"nodeadded")).on("beforesplice",b.fire.bind(b,"beforenoderemoved")).on("aftersplice",b.fire.bind(b,"afternoderemoved")).on("onremove",b.fire.bind(b,"noderemoved")).on("onpush",b.fire.bind(b,"change")).on("onremove",b.fire.bind(b,"change"));b.connections=MEPH.util.Observable.observable([]).on("beforepush",b.fire.bind(b,"beforeconnectionadded")).on("afterpush",b.fire.bind(b,"afterconnectionadded")).on("onpush",b.fire.bind(b,"connectionadded")).on("beforesplice",b.fire.bind(b,"beforeconnectionremoved")).on("aftersplice",b.fire.bind(b,"afterconnectionremoved")).on("onremove",b.fire.bind(b,"connectionremoved")).on("onpush",b.fire.bind(b,"change")).on("onremove",b.fire.bind(b,"change"));b.on("connectionadded",function(e,f,d){var c=d.added;c[0].on("emptyconnection",function(g,h){b.removeConnection(h)})})}});