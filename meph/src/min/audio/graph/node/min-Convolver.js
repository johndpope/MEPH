MEPH.define("MEPH.audio.graph.node.Convolver",{extend:"MEPH.audio.graph.node.Node",alias:"convolver",templates:true,injections:["audioResources"],requires:["MEPH.audio.graph.node.controls.Control"],properties:{normalizeinputvalue:null,audiobuffersources:null},initialize:function(){var a=this;a.nodecontrols=a.nodecontrols||[];a.nodecontrols.push("bufferoutput");a.nodecontrols.push("bufferinput");a.nodecontrols.push("normalize");a.nodecontrols.push("convobuffer");a.great();a.nodeInputs.push(a.createInput("buffer",MEPH.audio.graph.node.Node.AudioBuffer));a.nodeInputs.push(a.createInput("normalize",MEPH.audio.graph.node.Node.Boolean));a.nodeInputs.push(a.createInput("convobuffer",MEPH.audio.graph.node.Node.String,{path:"buffer"}));a.nodeOutputs.push(a.createOutput("buffer",MEPH.audio.graph.node.Node.AudioBuffer))},onResourcesUpdated:function(){var a=this;a.audiobuffersources=a.audiobuffersources||MEPH.util.Observable.observable([]);if(a.audiobuffersources){a.audiobuffersources.clear()}if(a.$inj.audioResources){a.audiobuffersources.push.apply(a.audiobuffersources,a.$inj.audioResources.getResources(true))}},onInjectionsComplete:function(){var a=this;a.onResourcesUpdated()},onLoaded:function(){var a=this;a.audiobuffersources=MEPH.util.Observable.observable([]);a.subscription(MEPH.subscribe(MEPH.audio.AudioResources.RESOURCE_MANAGER_UPDATE,a.onResourcesUpdated.bind(a)));a.onResourcesUpdated();a.title="Convolver";a.great()}});