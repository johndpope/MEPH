MEPH.define("MEPH.audio.graph.node.GeneratedNode",{extend:"MEPH.audio.graph.node.Node",alias:"generatednode",templates:true,requires:["MEPH.audio.graph.AudioGraphReader"],scripts:["MEPH.audio.graph.node.generated.Range","MEPH.audio.graph.node.generated.Select","MEPH.audio.graph.node.generated.Control"],properties:{},initialize:function(a){var d=this,c,b;d.nodecontrols=d.nodecontrols||[];if(a){a=MEPH.audio.graph.AudioGraphReader.cloneUnique(a);d.subGraph=a;c=a.nodes.first(function(e){return e.data.type==="MEPH.audio.graph.node.InputNode"});b=a.nodes.first(function(e){return e.data.type==="MEPH.audio.graph.node.OutputNode"});if(c&&b){c=c.data;b=b.data;b.nodeOutputs.foreach(function(f){var e="output_"+MEPH.GUID().nodename();f.alternateId=e;d.addCorrespondingControl(e,f);d.nodecontrols.push(e)});c.nodeInputs.foreach(function(f){var e="input_"+MEPH.GUID().nodename();f.alternateId=e;d.addCorrespondingControl(e,f);d.nodecontrols.push(e)});d.$input=c;d.$output=b;d.generateInputTemplate(c,b);d.generateProperties(c,b)}}d.great();if(c&&b){c.nodeInputs.foreach(function(e){d.nodeInputs.push(d.createInput(e.name,e.type))});b.nodeOutputs.foreach(function(e){d.nodeOutputs.push(d.createOutput(e.name,e.type))})}},generateProperties:function(b,a,d){var c=this;b.nodeInputs.foreach(function(e){var f=c.getCorrespondingControl(e);var h={title:f.name.nodename()+"Title",y:f.name.nodename()+"y",types:f.name.nodename()+"types",isoutput:f.name.nodename()+"isoutput"};for(var g in h){c[h[g]]=null}});b.nodeInputs.concat(a.nodeOutputs).unique(function(e){return e.name.nodename()}).select(function(e){var f=c.getCorrespondingControl(e);var h={title:f.name.nodename()+"Title",y:f.name.nodename()+"y",types:f.name.nodename()+"types",isoutput:f.name.nodename()+"isoutput"};for(var g in h){c[h]=null}})},setGeneratedProperties:function(b,a){var c=this;b.nodeInputs.concat(a.nodeOutputs).select(function(d){var e=c.getCorrespondingControl(d);c[e.name.nodename()].left=!!!d.output;c[e.name.nodename()].title=d.title})},generateInputTemplate:function(c,b){var e=this;e.uniqueTemplates();var a=c.nodeInputs.select(function(g){var i=e.getGenNodeTemplateForType(g.type);var h=e.getCorrespondingControl(g);var j={id:h.name.nodename(),title:"c$."+h.name.nodename()+"Title",y:"c$."+h.name.nodename()+"y",types:"c$."+h.name.nodename()+"types"};return e.parseAndReplace(j,i)}).join("")+b.nodeOutputs.select(function(g){var i=e.getGenNodeTemplateForType(g.type,"MEPH.audio.graph.node.generated.Control");var h=e.getCorrespondingControl(g);var j={id:h.name.nodename(),title:"c$."+h.name.nodename()+"Title",y:"c$."+h.name.nodename()+"y",types:"c$."+h.name.nodename()+"types"};return e.parseAndReplace(j,i)}).join("");a='<!-- "instruction": true, "name" : "genop", "operation" : "inject" , "position" : "inputs", "before" : true -->'+a+'<!-- "instruction": true, "name" : "genop", "close": true -->';var d="GeneratedNodeTemplate"+MEPH.GUID().replace(new RegExp("-","g"),"_");var f={alias:d,classifiedName:d,type:MEPH.templateType,template:a};MEPH.addTemplateInformation(f);e.addTemplate(d)},parseAndReplace:function(e,f){var d=this,c;c=f.template;for(var a in e){if(e.hasOwnProperty(a)){var b=new RegExp("{{{"+a+"}}}","g");c=c.replace(b,e[a])}}return c},getGenNodeTemplateForType:function(c,a){var b;if(a){b=MEPH.getDefinedTemplate(a)}else{switch(c){case MEPH.audio.graph.node.Node.Number:b=MEPH.getDefinedTemplate("MEPH.audio.graph.node.generated.Range");break;case MEPH.audio.graph.node.Node.String:b=MEPH.getDefinedTemplate("MEPH.audio.graph.node.generated.Select");break;default:b=MEPH.getDefinedTemplate("MEPH.audio.graph.node.generated.Control");break}}return b},onLoaded:function(){var a=this;a.great();a.title="Generated Node";a.setGeneratedProperties(a.$input,a.$output);a.refresh++}});