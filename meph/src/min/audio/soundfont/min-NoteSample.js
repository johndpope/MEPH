MEPH.define("MEPH.audio.soundfont.NoteSample",{requires:["MEPH.audio.soundfont.chunks.data.SampleRecord","MEPH.audio.soundfont.utils.SFByteArray"],extend:"MEPH.audio.soundfont.SoundPropertyObject",statics:{PROPERTY_NAMES:[],DEFAULTS:{}},properties:{overridingRootKey:-1,velocity:-1,keyNum:-1,startAddrsOffset:0,endAddrsOffset:0,startLoopAddrsOffset:0,endLoopAddrsOffset:0,startAddrsCoarseOffset:0,endAddrsCoarseOffset:0,startLoopAddrsCoarseOffset:0,endLoopAddrsCoarseOffset:0,sampleMode:0,sampleLink:0,exclusiveClass:0,sample:null,_sampleData:null},initialize:function(c,a,b){this.callParent("NoteSample");this.sample=c;if(NoteSample.PROPERTY_NAMES.length==0){this.initStaticConstants(NoteSample.PROPERTY_NAMES,NoteSample.DEFAULTS)}this.generateSampleData(c);this.keyNum=a;this.velocity=b},generateSampleData:function(b){var a=new ArrayBuffer(this.getEnd()-this.getStart());this._sampleData=new SFByteArray(a);this._sampleData.copy(b.bytes,this.getStart(),this.getEnd()-this.getStart());this._sampleData.position=0},getSampleData:function(){return this._sampleData},isDefault:function(a){return NoteSample.PROPERTY_NAMES.indexOf(a)!=-1&&NoteSample.DEFAULTS[a]==this[a]},getTransposition:function(a){return this.noteToFrequency(a)/this.rootFrequency},noteToFrequency:function(a){if(a==null||a==undefined){a=60}return 440*Math.pow(2,(a-69)/12)},getRootKey:function(){return(this.isDefault("overridingRootKey"))?this.sample.originalPitch:this.overridingRootKey},getRootFrequency:function(){return this.noteToFrequency(this.rootKey+this.sample.pitchCorrection*0.1+this.coarseTune+this.fineTune*0.01)},getLength:function(){return this.end-this.start},getStart:function(){return this.sample.start+this.startAddrsCoarseOffset*32768+this.startAddrsOffset},getEnd:function(){return this.sample.end+this.endAddrsCoarseOffset*32768+this.endAddrsOffset},getNumChannels:function(){return this.sample.numChannels},getLinkedSampleIndex:function(){return(this.numChannels==2)?this.sample.sampleLink:-1},getLoopStart:function(){return this.sample.loopStart+this.startLoopAddrsCoarseOffset*32768+this.startLoopAddrsOffset},getLoopEnd:function(){return this.sample.loopEnd+this.endLoopAddrsCoarseOffset*32768+this.endLoopAddrsOffset}});