MEPH.define("MEPH.audio.processor.TDStretch",{requires:["MEPH.audio.processor.FIFOSampleBuffer"],extend:"MEPH.audio.processor.FIFOProcessor",statics:{},properties:{bQuickSeek:false,channels:1,pMidBuffer:null,pMidBufferUnaligned:null,overlapLength:0,bAutoSeqSetting:true,bAutoSeekSetting:true,skipFract:0,tempo:1,sampleReq:0,seekLength:0,seekWindowLength:0,overlapDividerBits:0,slopingDivider:0,nominalSkip:0,skipFract:0,outputBuffer:null,inputBuffer:null,sampleRate:0,sequenceMs:0,seekWindowMs:0,overlapMs:0},initialize:function(b,d){var c=this;var e=0;var f=0;var a=8;c.inputBuffer=d;c.output=b;c.setParameters(44100,e,f,a);c.setTempo(1);c.clear()},getOutput:function(){var a=this;return a.output},getInput:function(){var a=this;return a.inputBuffer},setParameters:function(c,a,d,b){var e=this;if(c>0){this.sampleRate=Math.floor(c)}if(b>0){this.overlapMs=Math.floor(b)}if(a>0){this.sequenceMs=a;e.bAutoSeqSetting=false}else{if(a==0){e.bAutoSeqSetting=true}}if(d>0){e.seekWindowMs=d;e.bAutoSeekSetting=false}else{if(d==0){e.bAutoSeekSetting=true}}e.calcSeqParameters();e.calculateOverlapLength(e.overlapMs);e.setTempo(e.tempo)},assert:function(a){if(!a){throw new Error("not true")}},calculateOverlapLength:function(c){var b;var a=this;a.assert(c>=0);b=(a.sampleRate*c)/1000;if(b<16){b=16}b-=b%8;a.acceptNewOverlapLength(b)},getParameters:function(d){var b=0;var a=0;var c=this;if(d.hasOwnProperty("pSampleRate")){d.pSampleRate=Math.floor(c.sampleRate)}if(d.hasOwnProperty("pSequenceMs")){d.pSequenceMs=(c.bAutoSeqSetting)?(b):Math.floor(c.sequenceMs)}if(d.hasOwnProperty("pSeekWindowMs")){d.pSeekWindowMs=(c.bAutoSeekSetting)?(a):Math.floor(c.seekWindowMs)}if(d.hasOwnProperty("pOverlapMs")){c.pOverlapMs=Math.floor(c.overlapMs)}},overlapMono:function(a,g,c,e,b){var d;var j,h;var f=this;j=0;h=f.overlapLength;for(d=0;d<f.overlapLength;d++){a.set(d+e,(g.get(d+b+c)*j+f.pMidBuffer[d]*h)/f.overlapLength);j+=1;h-=1}},clearMidBuffer:function(){var a=this;a.pMidBuffer=new Float32Array(a.overlapLength*2+16)},clearInput:function(){var a=this;a.inputBuffer.clear();a.clearMidBuffer()},clear:function(){var a=this;a.output.clear();a.clearInput()},enableQuickSeek:function(a){var b=this;b.bQuickSeek=a},isQuickSeekEnabled:function(){var a=this;return a.bQuickSeek},seekBestOverlapPosition:function(b,c){var a=this;if(a.bQuickSeek){return a.seekBestOverlapPositionQuick(b,c)}else{return a.seekBestOverlapPositionFull(b,c)}},getInputSampleReq:function(){var a=this;return Math.floor(a.nominalSkip+0.5)},getOutputBatchSize:function(){var a=this;return a.seekWindowLength-a.overlapLength},overlap:function(f,e,c,a,d){var b=this;if(b.channels==2){throw new Error("no support for stereo.")}else{b.overlapMono(f,e,c,a,d)}},seekBestOverlapPositionFull:function(a,b){var d;var c,g;var f;var j=2.220446049250313e-16;var h=this;c=j;d=0;for(f=0;f<h.seekLength;f++){g=h.calcCrossCorr(a,b+h.channels*f,h.pMidBuffer);var e=(2*f-h.seekLength)/h.seekLength;g=((g+0.1)*(1-0.25*e*e));if(g>c){c=g;d=f}}h.clearCrossCorrState();return d},seekBestOverlapPositionQuick:function(b,c){var k=this;var f;var e;var d,i;var l,h,a;var m=k.$scanOffsets();d=FLT_MIN;e=Math.floo(m[0][0]);h=0;a=0;for(l=0;l<4;l++){f=0;while(m[l][f]){a=h+m[l][f];if(a>=seekLength){break}i=k.calcCrossCorr(b,c+k.channels*a,k.pMidBuffer);var g=Math.floor((2*a-k.seekLength)/k.seekLength);i=((i+0.1)*(1-0.25*g*g));if(i>d){d=i;e=a}f++}h=Math.floor(e)}k.clearCrossCorrState();return e},clearCrossCorrState:function(){},calcSeqParameters:function(){var j=this;var c=0.5;var d=2;var n=125;var g=50;var l=((g-n)/(d-c));var f=(n-(l)*(c));var b=25;var h=15;var i=((h-b)/(d-c));var a=(b-(i)*(c));var k=function(o,p,q){return(((o)<(p))?(p):(((o)>(q))?(q):(o)))};var m,e;if(j.bAutoSeqSetting){m=f+l*j.tempo;m=k(m,g,n);j.sequenceMs=Math.floor(m+0.5)}if(j.bAutoSeekSetting){e=a+i*j.tempo;e=k(e,h,b);j.seekWindowMs=Math.floor(e+0.5)}j.seekWindowLength=Math.floor((j.sampleRate*j.sequenceMs)/1000);if(j.seekWindowLength<2*j.overlapLength){j.seekWindowLength=Math.floor(2*j.overlapLength)}j.seekLength=Math.floor((j.sampleRate*j.seekWindowMs)/1000)},setTempo:function(a){var c;var b=this;b.tempo=a;b.calcSeqParameters();b.nominalSkip=(b.tempo*(b.seekWindowLength-b.overlapLength));c=Math.floor(b.nominalSkip+0.5);b.sampleReq=Math.max(c+b.overlapLength,b.seekWindowLength)+b.seekLength},setChannels:function(a){var b=this;b.assert(a>0);if(b.channels==a){return}b.assert(a==1||a==2);b.channels=a;b.inputBuffer.setChannels(channels);b.output.setChannels(channels)},processSamples:function(){var c,f;var b;var e=this,a=e.channels,d=e.overlapLength;while(e.inputBuffer.numSamples()>=e.sampleReq){f=e.seekBestOverlapPosition(e.inputBuffer,e.inputBuffer.ptrBegin());e.overlap(e.output,e.inputBuffer,Math.floor(f),e.output.ptrEnd(Math.floor(d)),e.inputBuffer.ptrBegin());e.output.putSamples(Math.floor(d));b=(e.seekWindowLength-2*e.overlapLength);if(e.inputBuffer.numSamples()<(f+b+e.overlapLength*2)){continue}e.output.putSamples(e.inputBuffer,Math.floor(b),e.inputBuffer.ptrBegin()+a*(f+d));e.assert((f+b+d*2)<=e.inputBuffer.numSamples());e.memcpy(e.pMidBuffer,e.inputBuffer.ptrBegin()+a*(f+b+d),e.inputBuffer,a*d,0);e.skipFract+=e.nominalSkip;e.ovlSkip=Math.floor(e.skipFract);e.skipFract-=e.ovlSkip;e.inputBuffer.receiveSamples(Math.floor(e.ovlSkip))}},memcpy:function(b,a,c,e,f){var d=this;f=f||0;[].interpolate(a,a+e,function(h,g){b[g]=c.get(h)})},putSamples:function(b,a){var c=this;c.inputBuffer.putSamples(b,a);c.processSamples()},acceptNewOverlapLength:function(d){var c=this;var a;var b;c.assert(d>=0);b=c.overlapLength;c.overlapLength=d;if(c.overlapLength>b){a=new Float32Array(c.overlapLength*2+16);c.pMidBuffer=(a);c.clearMidBuffer()}},calcCrossCorr:function(e,d,f){var g;var b;var a;var c=this;g=b=0;for(a=0;a<c.channels*c.overlapLength;a+=4){g+=e.get(d+a)*f[a]+e.get(d+a+1)*f[a+1];b+=e.get(d+a)*e.get(d+a)+e.get(d+1+1)*e.get(d+1);g+=e.get(d+a+2)*f[a+2]+e.get(d+a+3)*f[a+3];b+=e.get(d+a+2)*e.get(d+a+2)+e.get(d+a+3)*e.get(d+a+3)}if(b<1e-9){b=1}return g/Math.sqrt(b)},$scanOffsets:function(){return MEPH.audio.processor.TDStretch._scanOffsets}}).then(function(){MEPH.audio.processor.TDStretch._scanOffsets=[[124,186,248,310,372,434,496,558,620,682,744,806,868,930,992,1054,1116,1178,1240,1302,1364,1426,1488,0],[-100,-75,-50,-25,25,50,75,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-20,-15,-10,-5,5,10,15,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-4,-3,-2,-1,1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[121,114,97,114,98,105,108,32,104,99,117,111,116,100,110,117,111,115,0,0,0,0,0,0]]});