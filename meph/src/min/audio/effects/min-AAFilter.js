MEPH.define("MEPH.audio.effects.AAFilter",{requires:["MEPH.audio.effects.FIRFilter"],statics:{TWOPI:Math.PI*2,PI:Math.PI},properties:{pFIR:null,cutoffFreq:0.5},initialize:function(a){var b=this;b.pFIR=new MEPH.audio.effects.FIRFilter();b.setLength(a)},setCutoffFreq:function(a){var b=this;b.cutoffFreq=a;b.calculateCoeffs()},getLength:function(){var a=this;return a.pFIR.getLength()},setLength:function(a){var b=this;b.length=a;b.calculateCoeffs()},assert:function(a){if(!a){throw new Error("not true")}},calculateCoeffs:function(){var e;var m=this;var l,q,n,g,p;var k,c;var d,j;var o;var a;var f=m.cutoffFreq;var b=m.length;m.assert(b>=2);m.assert(b%4==0);m.assert(f>=0);m.assert(f<=0.5);o=new Float32Array(b);a=new Float32Array(b);k=2*f;c=Math.PI*k;n=Math.PI*2/b;j=0;for(e=0;e<b;e++){l=e-(b/2);q=l*c;if(q!=0){g=k*Math.sin(q)/q}else{g=1}p=0.54+0.46*Math.cos(n*l);q=p*g;o[e]=q;j+=q}m.assert(j>0);m.assert(o[b/2]>0);m.assert(o[b/2+1]>-0.000001);m.assert(o[b/2-1]>-0.000001);d=16384/j;for(e=0;e<b;e++){q=o[e]*d;q+=(q>=0)?0.5:-0.5;m.assert(q>=-32768&&q<=32767);a[e]=q}m.pFIR.setCoefficients(a,b,14)},evaluate:function(b,g,a,c,f,e){var d=this;return d.pFIR.evaluate(b,g,a,c,f,e)}});