MEPH.define("MEPH.util.Observable",{statics:{propKeyToArray:function(c){var b=[];for(var a in c){b.push(a)}return b},isObservable:function(a){if(!a){return false}if(Array.isArray(a)){return a.isObservable&&true}return a[MEPH.isObservablePropertyKey]?true:false},sweep:function(c){var b=[],a=false;MEPH.util.Observable.propKeyToArray(c).where(function(d){return !c[MEPH.isObservablePropertyKey].properties.some(function(e){return e===d})}).foreach(function(d){b.push(d);a=true});if(a){MEPH.util.Observable.observable(c,b,true)}},defineDependentProperty:function(a,c,d,b){Object.defineProperty(c,a,{configurable:true,get:function(e){return b.apply(this,e)}.bind(c,MEPH.Array(d))});MEPH.Array(d).foreach(function(e){c.on("change_"+e,function(f){this.fire("change_"+a,{old:undefined,"new":this[a],property:a});this.fire("changed",{old:undefined,"new":this[a],property:f});this.fire("altered",{references:MEPH.Array([this]),path:a,old:undefined,value:this[a],property:f})}.bind(c,e))})},canObserve:function(b){var e=e||null;var a=a||null;var c=c||null;var d=d||null;return ![a,e,d,c].where().some(function(f){return b instanceof f})},observable:function(a,c,b){MEPH.Observable=MEPH.util.Observable;if(Array.isArray(a)){MEPH.util.Observable.observableArray(a)}else{if(MEPH.util.Observable.canObserve(a)){(function(o,e){var l=this,m=MEPH.nonEnumerablePropertyPrefix;if(l[MEPH.isObservablePropertyKey]&&!e){return l}MEPH.Events(l);o=o||MEPH.util.Observable.propKeyToArray(l);o=MEPH.Array(o);if(g(l)===undefined){Object.defineProperty(l,MEPH.isObservablePropertyKey,{value:{properties:[]},enumerable:false,writable:false,configurable:false})}function p(i){return i[MEPH.isObservablePropertyKey]?true:false}function g(i){return i[MEPH.isObservablePropertyKey]}function h(i){return g(i).properties}function q(i,r){if(MEPH.IsObject(i)&&MEPH.util.Observable.canObserve(i)){if(i.un){i.un("altered",r)}}}function j(s,i,r){if(MEPH.IsObject(s)&&MEPH.util.Observable.canObserve(s)){MEPH.Observable.observable(s);if(!s.hasOn("altered",i)){s.on("altered",function(x,v,t){var z=this,w,y=t.path.split(MEPH.pathDelimiter),u;t.references=t.references||[];y.unshift(x);if(!t.references.contains(function(A){return A===z})){u=MEPH.Array([this].concat(t.references));w={references:u,path:y.join(MEPH.pathDelimiter)};MEPH.applyIf(t,w);this.fire("altered",w)}}.bind(i,r),i)}}}o=o.where(function(i){if(p(l)&&MEPH.util.Observable.canObserve(l)){return !h(l).contains(function(r){return r===i})}return true});var d="$";if(false){Object.observe(l,function(i){i.foreach(function(u){var t=u.name;var r=u.oldValue;var s=l[u.name];this.fire("beforeset"+t,{old:r,"new":s});q(r,this);j(s,this,t);if(!this.is_paused||!this.is_paused()){this.fire("set"+t,{old:r,"new":s,property:t});if(r!==s){this.fire("change_"+t,{old:r,"new":s,property:t});this.fire("changed",{old:r,"new":s,property:t});this.fire("altered",{references:MEPH.Array([this]),path:t,old:r,value:s,property:t})}}}.bind(this));return true}.bind(l))}else{for(var k=o.length;k--;){var n=o[k],f=l[n];if(typeof(f)==="function"){continue}Object.defineProperty(l,n,{enumerable:true,get:function(i){return this[m+i]}.bind(l,n),set:function(s,r){var i=this[m+s];this.fire("beforeset"+s,{old:i,"new":r});q(i,this);j(r,this,s);this[m+s]=r;if(!this.is_paused||!this.is_paused()){this.fire("set"+s,{old:i,"new":r,property:s});if(i!==r){this.fire("change_"+s,{old:i,"new":r,property:s});this.fire("changed",{old:i,"new":r,property:s});this.fire("altered",{references:MEPH.Array([this]),path:s,old:i,value:r,property:s})}}return true}.bind(l,n)});Object.defineProperty(l,m+n,{enumerable:false,writable:true,configurable:false,value:null});l[m+n]=f;if(MEPH.IsObject(f)&&!p(f)){q(f,l);j(f,l,n)}}}o.foreach(function(i){if(!l[MEPH.isObservablePropertyKey].properties.contains(function(r){return i===r})){l[MEPH.isObservablePropertyKey].properties.push(i)}});return this}).bind(a,c||null,b||null)()}else{}}return a},observableArray:function(a){if(!a.observable){(function(h){if(h.isObservable){return h}var f=MEPH.util.Array.convert;MEPH.Events(h);Object.defineProperty(h,"isObservable",{value:true,enumerable:false,configurable:false,writeable:false});Object.defineProperty(h,"isObservableCollection",{value:true,enumerable:false,configurable:false,writeable:false});var i=h.push;Object.defineProperty(h,"push",{enumerable:false,configurable:true,writable:true,value:function(){this.fire("beforepush",{added:f(arguments),removed:[]});i.apply(this,arguments);this.fire("afterpush",{removed:MEPH.Array([]),added:f(arguments)});this.fire("onpush",{removed:[],added:f(arguments)});this.fire("changed",{added:f(arguments),removed:[]});this.fire("pushed",{added:(f(arguments)),removed:[]})}.bind(h)});var c=h.pop;Object.defineProperty(h,"pop",{enumerable:false,configurable:true,writable:true,value:function(){this.fire.apply(this,MEPH.Array(["beforepop"].concat(f(arguments))));var j=MEPH.Array([c.apply(this,arguments)]);this.fire("afterpop",{removed:j,added:MEPH.Array([])});this.fire.apply(this,MEPH.Array(["onpop"].concat(f(arguments))));this.fire("changed",{removed:j,added:MEPH.Array([])});this.fire("popped",j);return j[0]}.bind(h)});var d=h.unshift;Object.defineProperty(h,"unshift",{enumerable:false,configurable:true,writable:true,value:function(){this.fire("beforeunshift",{added:f(arguments),removed:[]});var j=d.apply(this,arguments);this.fire("afterunshift",{removed:MEPH.Array([]),added:f(arguments)});this.fire("onunshift",arguments);this.fire("changed",{removed:MEPH.Array([]),added:f(arguments)});this.fire("unshifted",f(arguments));return j}.bind(h)});var g=h.shift;Object.defineProperty(h,"shift",{enumerable:false,configurable:true,writable:true,value:function(){this.fire.apply(this,MEPH.Array(["beforeshift"].concat(f(arguments))));var j=g.apply(this,arguments);this.fire("aftershift",{removed:MEPH.Array([j]),added:MEPH.Array([])});this.fire.apply(this,MEPH.Array(["onshift"].concat(f(arguments))));this.fire("changed",{removed:MEPH.Array([j]),added:MEPH.Array([])});this.fire("shifted",MEPH.Array([j]))}.bind(h)});var e=h.splice;Object.defineProperty(h,"splice",{enumerable:false,configurable:true,writable:true,value:function(){this.fire.apply(this,MEPH.Array(["beforesplice"].concat(f(arguments))));var j=MEPH.Array(e.apply(this,arguments));var k=f(arguments);var l=k.subset(2,k.length);this.fire("aftersplice",{removed:j,added:l,arguments:k.subset(0,2)});this.fire("onremove",j);this.fire("changed",{removed:j,added:l});this.fire("spliced",{removed:j,added:l});return j}.bind(h)});var b=h.concat;Object.defineProperty(h,"concat",{enumerable:false,configurable:true,writable:true,value:function(){this.fire(this,MEPH.Array(["beforeconcat"].concat(f(arguments))));var j=b.apply(this,arguments);this.fire("afterconcat",j);this.fire("onconcat",j);this.fire("concatted",j)}.bind(h)});return this})(a)}}}}).then(function(a){MEPH.Observable=MEPH.util.Observable;return a});