MEPH.define("MEPH.math.expression.Factor",{requires:["MEPH.math.Util"],statics:{getFactors:function(b){var a=MEPH.math.expression.Factor;switch(b.type){case Expression.type.integral:case Expression.type.variable:return a.getVariableFactors(b);case Expression.type.power:return a.getPowerFactors(b);case Expression.type.multiplication:return a.getMultiplicationFactors(b);default:throw new Error("unhandle case ? getFactors -> Factor.js ")}},getFirstNumericalPartWithMatchingFactor:function(c,e){var a=MEPH.math.expression.Factor;var d,b=e.getParts().first(function(f){var h=a.getNumerical(f.val);if(typeof h==="number"){var g=MEPH.math.Util.factor(h);d=g.first(function(i){return c===i});return d}else{return false}});return b?{factorVal:d,exp:b.val}:false},divideFactor:function(e,c){var b=MEPH.math.expression.Factor;var d=b.getNumerical(e);var a=MEPH.math.expression.Evaluator.evaluate(Expression.division(e.copy(),c));return a},removeFactors:function(d,c){var a=MEPH.math.expression.Factor;var b=c.select(function(e){return e.copy()});b.foreach(function(f){if(f.count){var g;var e;if(typeof(e=a.getNumerical(f.exp))==="number"){var i=a.getFirstNumericalPartWithMatchingFactor(e,d);if(i){var h=a.divideFactor(i.exp,i.factorVal);Expression.SwapPart(i.exp,h);a.reduceFactorCount(f,1)}}else{g=d.getParts().where(function(j){return a.getExp(j.val).equals(f.exp,{exact:true})});g.foreach(function(j){var k=a.getCount(j.val);a.reduceFactorCount(f,k);d.remove(j.val)})}}});if(d.parts.length===1){switch(d.type){case Expression.type.multiplication:d=d.getParts().first().val;break}}else{switch(d.type){case Expression.type.multiplication:d=Expression.removeOne(d)}}return d},reduceFactorCount:function(a,c){if(isNaN(a.count)||isNaN(c)){var b=Expression.subtraction(a.count,c);a.count=MEPH.math.expression.Evaluator.evaluate(b)}else{a.count-=c}},getCount:function(a){switch(a.type){case Expression.type.power:return a.partOrDefault(Expression["function"].power);default:return 1}},getExp:function(a){switch(a.type){case Expression.type.power:return a.partOrDefault(Expression["function"].base);default:return a}},getMultiplicationFactors:function(d){var b=MEPH.math.expression.Factor;var c=[],a=d.getParts().select(function(e){return b.getFactors(e.val)}).concatFluentReverse(function(e){return e});a.foreach(function(e){var h=c.first(function(f){return f.exp.equals(e.exp,{exact:true})});if(h){if(!isNaN(h.count)&&!isNaN(e.count)){h.count+=e.count}else{var g=typeof h.count==="object"?h.count:Expression.variable(h.count);h.count=Expression.addition(Expression.variable(e.count),g)}}else{c.push(e)}});return c},getVariableFactors:function(e){var a=MEPH.math.expression.Factor;var d=a.getNumerical(e);if(!isNaN(d)){var c=MEPH.math.Util.factor(d).where(function(f){return f!==1});if(c.length!==1){return c.where(function(f){return f!==d}).select(function(f){return new a(Expression.variable(f),1)})}}var b=new a(e,1);return[b]},getPowerFactors:function(f){var a=MEPH.math.expression.Factor;var g=f.copy();var e=Expression.FlattenPower(g);var d=e.partOrDefault(Expression["function"].power);var b=a.getNumerical(d);var c=new a(e.partOrDefault(Expression["function"].base),b);return[c]},getNumerical:function(c,b){var a;if(typeof c==="object"){if(c.type===Expression.type.variable){a=c.partOrDefault(Expression.type.variable);a=isNaN(a)?(b?a:c):parseFloat(a)}else{a=c}}else{if(typeof c==="number"){a=c}else{if(typeof c==="string"){a=isNaN(c)?c:parseFloat(c)}}}return a},isNumerical:function(b){var a=MEPH.math.expression.Factor.getNumerical(b);return !isNaN(a)}},initialize:function(c,b){var a=this;a.exp=c;a.count=b},copy:function(){var a=this;return new MEPH.math.expression.Factor(a.exp,a.count)},properties:{exp:null,count:null}});